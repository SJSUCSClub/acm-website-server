'use strict';

const zodOpenapi = require('@hono/zod-openapi');

function createErrorSchema(schema) {
  const { error } = schema.safeParse(
    schema._def.typeName === zodOpenapi.z.ZodFirstPartyTypeKind.ZodArray ? [] : {}
  );
  return zodOpenapi.z.object({
    success: zodOpenapi.z.boolean().openapi({
      example: false
    }),
    error: zodOpenapi.z.object({
      issues: zodOpenapi.z.array(
        zodOpenapi.z.object({
          code: zodOpenapi.z.string(),
          path: zodOpenapi.z.array(
            zodOpenapi.z.union([zodOpenapi.z.string(), zodOpenapi.z.number()])
          ),
          message: zodOpenapi.z.string().optional()
        })
      ),
      name: zodOpenapi.z.string()
    }).openapi({
      example: error
    })
  });
}

module.exports = createErrorSchema;
